networks:
  meet.jitsi:

volumes:
  jitsi-web-config:
  jitsi-web-crontabs:
  jitsi-web-transcripts:
  jitsi-web-load-test:
  jitsi-prosody-config:
  jitsi-prosody-plugins-custom:
  jitsi-jicofo-config:
  jitsi-jvb-config:
  jitsi-transcriber:


services:
  jitsi-web:
    image: jitsi/web:${JITSI_IMAGE_VERSION:-unstable}
    restart: ${RESTART_POLICY:-unless-stopped}
    # ports:
    #   - '${HTTP_PORT}:80'
    #   - '${HTTPS_PORT}:443'
    volumes:
      - jitsi-web-config:/config
      - jitsi-web-crontabs:/var/spool/cron/crontabs
      - jitsi-web-transcripts:/usr/share/jitsi-meet/transcripts
      - jitsi-web-load-test:/usr/share/jitsi-meet/load-test
    labels:
      service: "jitsi-web"
    env_file: 
      - ./jitsi.env
      - ./jitsi-passwords.env
    networks:
      meet.jitsi:
      default:
    depends_on:
      - jvb
      - jicofo
      - prosody
      - transcriber

  # XMPP server
  prosody:
    image: jitsi/prosody:${JITSI_IMAGE_VERSION:-unstable}
    restart: ${RESTART_POLICY:-unless-stopped}
    # expose:
    #   - '${XMPP_PORT:-5222}'
    #   - '${PROSODY_S2S_PORT:-5269}'
    #   - '5347'
    #   - '${PROSODY_HTTP_PORT:-5280}'
    env_file: 
      - ./jitsi.env
      - ./jitsi-passwords.env
    labels:
      service: "jitsi-prosody"
    volumes:
      - jitsi-prosody-config:/config
      - jitsi-prosody-plugins-custom:/prosody-plugins-custom
    networks:
      default:
      meet.jitsi:
        # aliases:
        #   - ${XMPP_SERVER:-xmpp.meet.jitsi}
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 2s

  # Focus component
  # jitsi-conference-focus
  jicofo:
    image: jitsi/jicofo:${JITSI_IMAGE_VERSION:-unstable}
    restart: ${RESTART_POLICY:-unless-stopped}
    # ports:
    #   - '127.0.0.1:${JICOFO_REST_PORT:-8888}:8888'
    volumes:
      - jitsi-jicofo-config:/config
    labels:
      service: "jitsi-jicofo"
    env_file: 
      - ./jitsi.env
      - ./jitsi-passwords.env
    depends_on:
      - prosody
    networks:
      meet.jitsi:

  # Video bridge
  # jitsi-videobridge
  jvb:
    image: jitsi/jvb:${JITSI_IMAGE_VERSION:-unstable}
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - '${JVB_PORT:-10000}:${JVB_PORT:-10000}/udp'
    #   - '127.0.0.1:${JVB_COLIBRI_PORT:-8080}:8080'
    volumes:
      - jitsi-jvb-config:/config
    labels:
      service: "jitsi-jvb"
    env_file: 
      - ./jitsi.env
      - ./jitsi-passwords.env
    depends_on:
      - prosody
    networks:
      meet.jitsi:

  # Vosk speech-to-text server
  vosk:
    image: alphacep/kaldi-en:latest
    networks:
      meet.jitsi:

  transcriber:
      image: jitsi/jigasi:${JITSI_IMAGE_VERSION:-unstable}
      env_file: 
        - ./jitsi.env
        - ./jitsi-passwords.env
      restart: ${RESTART_POLICY:-unless-stopped}
      volumes:
          - jitsi-transcriber:/config
          - ./transcripts:/tmp/transcripts:Z
      depends_on:
          - prosody
          - vosk
      networks:
          meet.jitsi: